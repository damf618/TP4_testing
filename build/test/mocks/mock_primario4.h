/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_PRIMARIO4_H
#define _MOCK_PRIMARIO4_H

#include "unity.h"
#include "primario4.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_primario4_Init(void);
void mock_primario4_Destroy(void);
void mock_primario4_Verify(void);




#define CommCheck_IgnoreAndReturn(cmock_retval) CommCheck_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void CommCheck_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, dprim_state_t cmock_to_return);
#define CommCheck_StopIgnore() CommCheck_CMockStopIgnore()
void CommCheck_CMockStopIgnore(void);
#define CommCheck_ExpectAndReturn(prim, casea, casef, casen, cmock_retval) CommCheck_CMockExpectAndReturn(__LINE__, prim, casea, casef, casen, cmock_retval)
void CommCheck_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, dprimario_t* prim, dprim_state_t casea, dprim_state_t casef, dprim_state_t casen, dprim_state_t cmock_to_return);
typedef dprim_state_t (* CMOCK_CommCheck_CALLBACK)(dprimario_t* prim, dprim_state_t casea, dprim_state_t casef, dprim_state_t casen, int cmock_num_calls);
void CommCheck_AddCallback(CMOCK_CommCheck_CALLBACK Callback);
void CommCheck_Stub(CMOCK_CommCheck_CALLBACK Callback);
#define CommCheck_StubWithCallback CommCheck_Stub
#define CommCheck_IgnoreArg_prim() CommCheck_CMockIgnoreArg_prim(__LINE__)
void CommCheck_CMockIgnoreArg_prim(UNITY_LINE_TYPE cmock_line);
#define CommCheck_IgnoreArg_casea() CommCheck_CMockIgnoreArg_casea(__LINE__)
void CommCheck_CMockIgnoreArg_casea(UNITY_LINE_TYPE cmock_line);
#define CommCheck_IgnoreArg_casef() CommCheck_CMockIgnoreArg_casef(__LINE__)
void CommCheck_CMockIgnoreArg_casef(UNITY_LINE_TYPE cmock_line);
#define CommCheck_IgnoreArg_casen() CommCheck_CMockIgnoreArg_casen(__LINE__)
void CommCheck_CMockIgnoreArg_casen(UNITY_LINE_TYPE cmock_line);
#define ButtonCheck_IgnoreAndReturn(cmock_retval) ButtonCheck_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ButtonCheck_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, dprim_state_t cmock_to_return);
#define ButtonCheck_StopIgnore() ButtonCheck_CMockStopIgnore()
void ButtonCheck_CMockStopIgnore(void);
#define ButtonCheck_ExpectAndReturn(prim, eventcase, casen, Mode, cmock_retval) ButtonCheck_CMockExpectAndReturn(__LINE__, prim, eventcase, casen, Mode, cmock_retval)
void ButtonCheck_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, dprimario_t* prim, dprim_state_t eventcase, dprim_state_t casen, dprim_state_t Mode, dprim_state_t cmock_to_return);
typedef dprim_state_t (* CMOCK_ButtonCheck_CALLBACK)(dprimario_t* prim, dprim_state_t eventcase, dprim_state_t casen, dprim_state_t Mode, int cmock_num_calls);
void ButtonCheck_AddCallback(CMOCK_ButtonCheck_CALLBACK Callback);
void ButtonCheck_Stub(CMOCK_ButtonCheck_CALLBACK Callback);
#define ButtonCheck_StubWithCallback ButtonCheck_Stub
#define ButtonCheck_IgnoreArg_prim() ButtonCheck_CMockIgnoreArg_prim(__LINE__)
void ButtonCheck_CMockIgnoreArg_prim(UNITY_LINE_TYPE cmock_line);
#define ButtonCheck_IgnoreArg_eventcase() ButtonCheck_CMockIgnoreArg_eventcase(__LINE__)
void ButtonCheck_CMockIgnoreArg_eventcase(UNITY_LINE_TYPE cmock_line);
#define ButtonCheck_IgnoreArg_casen() ButtonCheck_CMockIgnoreArg_casen(__LINE__)
void ButtonCheck_CMockIgnoreArg_casen(UNITY_LINE_TYPE cmock_line);
#define ButtonCheck_IgnoreArg_Mode() ButtonCheck_CMockIgnoreArg_Mode(__LINE__)
void ButtonCheck_CMockIgnoreArg_Mode(UNITY_LINE_TYPE cmock_line);
#define ResetChange_Ignore() ResetChange_CMockIgnore()
void ResetChange_CMockIgnore(void);
#define ResetChange_StopIgnore() ResetChange_CMockStopIgnore()
void ResetChange_CMockStopIgnore(void);
#define ResetChange_Expect(prim) ResetChange_CMockExpect(__LINE__, prim)
void ResetChange_CMockExpect(UNITY_LINE_TYPE cmock_line, dprimario_t* prim);
typedef void (* CMOCK_ResetChange_CALLBACK)(dprimario_t* prim, int cmock_num_calls);
void ResetChange_AddCallback(CMOCK_ResetChange_CALLBACK Callback);
void ResetChange_Stub(CMOCK_ResetChange_CALLBACK Callback);
#define ResetChange_StubWithCallback ResetChange_Stub
#define ResetChange_IgnoreArg_prim() ResetChange_CMockIgnoreArg_prim(__LINE__)
void ResetChange_CMockIgnoreArg_prim(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
